$ GET /recipes?name="...":
Obtener un listado de las recetas que contengan la palabra ingresada como query parameter
Si no existe ninguna receta mostrar un mensaje adecuado
(Comentario: Supongo que debo agregarle a esta ruta el caso de que no me pasen name, de ser cierto deberia mostrar todas las recetas)
* Ruta principal: debe contener
Área donde se verá el listado de recetas. Deberá mostrar su:
-Imagen(image)
-Nombre(title)
-Tipo de dieta (vegetariano, vegano, apto celíaco, etc)
Para los tipos de dieta deben tener en cuenta las propiedades vegetarian, vegan, glutenFree por un lado y también analizar las que se incluyan dentro de la propiedad diets


$ GET /recipes/{idReceta}:
Obtener el detalle de una receta en particular
Debe traer solo los datos pedidos en la ruta de detalle de receta
Incluir los tipos de dieta asociados
* Ruta de detalle de receta: debe contener
-Los campos mostrados en la ruta principal para cada receta (imagen, nombre, tipo de plato y tipo de dieta)
-Resumen del plato(summary)
-Puntuación(spoonacularScore)
-Nivel de "comida saludable"(healthScore)
-Paso a paso(instructions)


$ GET /types:
Obtener todos los tipos de dieta posibles
En una primera instancia, cuando no exista ninguno, deberán precargar la base de datos con los tipos de datos indicados por spoonacular acá --> https://spoonacular.com/food-api/docs#Diets


$ POST /recipe:
Recibe los datos recolectados desde el formulario controlado de la ruta de creación de recetas por body
Crea una receta en la base de datos